name: CI

on:
  push:
    branches: [master, dev, development, feature/**, bugfix/**, pr/**]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  linux-gcc:
    name: Build (Ubuntu 18.04 LTS x86_64, GCC)
    runs-on: ubuntu-18.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update -yqq
          sudo apt-get install -yqq build-essential libsdl1.2-dev

      - name: Prepare Environment
        run: |
          echo "SHORT_SHA=${GITHUB_SHA:0:10}" >> $GITHUB_ENV
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build OpenJazz (normal)
        run: |
          make
          ls -l OpenJazz

  linux-clang:
    name: Build (Ubuntu 18.04 LTS x86_64, Clang)
    runs-on: ubuntu-18.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update -yqq
          sudo apt-get install -yqq build-essential libsdl1.2-dev clang-10 \
            asciidoctor w3m

      - name: Prepare Environment
        run: |
          echo "SHORT_SHA=${GITHUB_SHA:0:10}" >> $GITHUB_ENV
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build OpenJazz (slim)
        run: |
          export CXX=clang++
          export CXXFLAGS="-Wall -O2 -g -ffunction-sections -fdata-sections"
          export LDFLAGS="-Wl,--gc-sections"
          make
          ls -l OpenJazz

      - name: Prepare artifact
        run: |
          mkdir OJ-${SHORT_SHA}
          asciidoctor -o OpenJazzManual.html -a oj_version=${SHORT_SHA} builds/unix/OpenJazz.6.adoc
          w3m -dump -cols 2147483647 -s OpenJazzManual.html > Manual.txt
          cp OpenJazz README.md COPYING *.txt OJ-${SHORT_SHA}/

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: openjazz-linux-glibc2.27-x86_64
          path: OJ-*/

  windows-mingw-gcc:
    name: Build (Windows x86_64, MinGW, GCC)
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: |
            base-devel autotools mingw-w64-x86_64-gcc mingw-w64-x86_64-SDL
            dos2unix mingw-w64-x86_64-asciidoctor w3m

      - name: Prepare Environment
        run: |
          echo "SHORT_SHA=${GITHUB_SHA:0:10}" >> $GITHUB_ENV
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build OpenJazz
        run: |
          export LDFLAGS="-static"
          export PKG_CONFIG="pkg-config --static"
          autoreconf -if
          ./configure --disable-dependency-tracking
          make

      - name: Prepare artifact
        run: |
          mkdir OJ-${SHORT_SHA}
          asciidoctor -o OpenJazzManual.html -a oj_version=${SHORT_SHA} builds/unix/OpenJazz.6.adoc
          w3m -dump -cols 2147483647 -s OpenJazzManual.html > Manual.txt
          cp README.md README.txt
          cp COPYING COPYING.txt
          unix2dos *.txt
          cp OpenJazz.exe *.txt OJ-${SHORT_SHA}/

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: openjazz-windows-mingw-x86_64
          path: OJ-*/

  wii-devkitppc:
    name: Build (Wii, devkitPPC)
    runs-on: ubuntu-latest
    container: devkitpro/devkitppc:latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -yqq automake dos2unix asciidoctor w3m

      - name: Prepare Environment
        run: |
          echo "SHORT_SHA=${GITHUB_SHA:0:10}" >> $GITHUB_ENV
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build OpenJazz
        run: |
          export PATH=$PATH:$DEVKITPPC/bin:$DEVKITPRO/tools/bin:$DEVKITPRO/portlibs/wii/bin
          export CXXFLAGS="-Wall -O2 -g -ffunction-sections -fdata-sections"
          export LDFLAGS="-Wl,--gc-sections"
          autoreconf -if
          ./configure --host=powerpc-eabi --disable-dependency-tracking
          make

      - name: Prepare artifact
        run: |
          mkdir OJ-${SHORT_SHA}
          asciidoctor -o OpenJazzManual.html -a oj_version=${SHORT_SHA} builds/unix/OpenJazz.6.adoc
          w3m -dump -cols 2147483647 -s OpenJazzManual.html > Manual.txt
          cp README.md README.txt
          cp COPYING COPYING.txt
          unix2dos *.txt
          cp builds/wii/* *.txt OJ-${SHORT_SHA}/

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: openjazz-wii
          path: OJ-*/

  psp-pspdev:
    if: ${{ false }} # disable for now
    name: Build (PSP, pspdev)
    runs-on: ubuntu-latest
    container: pspdev/pspdev:latest
    steps:
      - name: Install dependencies
        shell: sh
        run: |
          apk add make bash perl dos2unix asciidoctor w3m

      - name: Prepare Environment
        run: |
          echo "SHORT_SHA=${GITHUB_SHA:0:10}" >> $GITHUB_ENV
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build OpenJazz
        run: |
          export PATH=$PATH:$PSPDEV/bin
          cd builds/psp
          make

      - name: Prepare artifact
        run: |
          mkdir OJ-${SHORT_SHA}
          asciidoctor -o OpenJazzManual.html -a oj_version=${SHORT_SHA} builds/unix/OpenJazz.6.adoc
          w3m -dump -cols 2147483647 -s OpenJazzManual.html > Manual.txt
          cp README.md README.txt
          cp COPYING COPYING.txt
          unix2dos *.txt
          cp builds/psp/EBOOT.PBP *.txt OJ-${SHORT_SHA}/

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: openjazz-psp
          path: OJ-*/
