name: Continuous integration
on:
  - push
  - pull_request

jobs:
  linux-gcc:
    name: Build (Ubuntu 18.04 x86_64, GCC)
    # Test on a slightly old Linux distribution to ensure greater compatibility.
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install dependencies
        run: |
          sudo apt-get update -yqq
          sudo apt-get install -yqq build-essential libsdl1.2-dev

      - name: Build OpenJazz
        run: |
          make -j$(nproc)
          ls -l OpenJazz

      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: openjazz-linux-glibc2.27-x86_64
          path: OpenJazz

  linux-clang:
    name: Build (Ubuntu 18.04 x86_64, Clang)
    # Test on a slightly old Linux distribution to ensure greater compatibility.
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install dependencies
        run: |
          sudo apt-get update -yqq
          sudo apt-get install -yqq build-essential libsdl1.2-dev clang-10

      - name: Build OpenJazz
        run: |
          CC=clang CXX=clang++ make -j$(nproc)
          ls -l OpenJazz

  windows-mingw-gcc:
    name: Build (Windows x86_64, MinGW, GCC)
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: base-devel mingw-w64-x86_64-gcc mingw-w64-x86_64-SDL

      - name: Build OpenJazz
        shell: msys2 {0}
        run: |
          autoreconf -i
          ./configure --disable-dependency-tracking
          make -j$(nproc)
          ls -l OpenJazz.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: openjazz-windows-mingw-x86_64
          path: OpenJazz.exe
